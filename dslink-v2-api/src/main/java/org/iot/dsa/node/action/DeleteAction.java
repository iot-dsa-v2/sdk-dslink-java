package org.iot.dsa.node.action;

import org.iot.dsa.dslink.ActionResults;

/**
 * Renames a dynamic child of a node.
 *
 * @author Aaron Hansen
 */
public class DeleteAction extends DSAction {

    ///////////////////////////////////////////////////////////////////////////
    // Class Fields
    ///////////////////////////////////////////////////////////////////////////

    public static final DeleteAction INSTANCE = new DeleteAction();
    public static final String DELETE = "Delete";

    ///////////////////////////////////////////////////////////////////////////
    // Instance Fields
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Constructors
    ///////////////////////////////////////////////////////////////////////////

    public DeleteAction() {
        setImmutable(true);
    }

    ///////////////////////////////////////////////////////////////////////////
    // Public Methods
    ///////////////////////////////////////////////////////////////////////////

    @Override
    public ActionResults invoke(DSIActionRequest request) {
        request.getTargetInfo().getParent().remove(request.getTargetInfo());
        return null;
    }

    ///////////////////////////////////////////////////////////////////////////
    // Protected Methods
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Package / Private Methods
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Inner Classes
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Initialization
    ///////////////////////////////////////////////////////////////////////////

}
